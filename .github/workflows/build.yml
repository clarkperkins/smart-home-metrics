name: Build

on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true
    outputs:
      version:
        description: Library Version
        value: ${{ jobs.build.outputs.version }}
      image-version:
        description: Image Version
        value: ${{ jobs.build.outputs.image-version }}
      image-tags:
        description: Image Tags
        value: ${{ jobs.build.outputs.image-tags }}
      image-labels:
        description: Image Labels
        value: ${{ jobs.build.outputs.image-labels }}

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      image-version: ${{ steps.meta.outputs.version }}
      image-tags: ${{ steps.meta.outputs.tags }}
      image-labels: ${{ steps.meta.outputs.labels }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Poetry cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-cache-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-cache-${{ runner.os }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/clarkperkins/shm
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch
            type=ref,event=pr
          flavor: |
            latest=${{ github.ref_name == github.event.repository.default_branch }}

      - name: Library Version
        id: version
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            echo "version=${{ steps.meta.outputs.version }}" >> $GITHUB_OUTPUT
          else
            # Use the date as the semver instead
            echo "version=$(date +'%Y.%-m.%-d')-dev+${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

      - name: Install Poetry
        run: |
          python -m pip install --upgrade poetry

      - name: Set Library Version
        run: |
          poetry version ${{ steps.version.outputs.version }}

      - name: Install Dependencies
        run: |
          poetry install

      - name: Run Checks
        run: |
          make check

#      - name: Run Tests
#        run: |
#          make test
#
#      - name: Publish Test Results
#        uses: EnricoMi/publish-unit-test-result-action@v1
#        if: always()
#        with:
#          files: reports/tests/*.xml

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
