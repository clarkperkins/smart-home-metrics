name: Build & Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build & Test

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install Build Dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install --upgrade poetry

      - name: Install Dependencies
        run: |
          poetry install

#      - name: Run Checks
#        run: |
#          make check
#        env:
#          DJANGO_ENV: test
#
#      - name: Run Tests
#        run: |
#          make test
#        env:
#          DJANGO_ENV: test
#          DATABASE_URL: 'postgres://postgres:postgres@localhost:5432/postgres'
#          BONSAI_URL: 'http://localhost:9200'
#
#      - name: Run Integration Tests
#        run: |
#          make integration-test
#        env:
#          DJANGO_ENV: test
#          DATABASE_URL: 'postgres://postgres:postgres@localhost:5432/postgres'
#          BONSAI_URL: 'http://localhost:9200'
#
#      - name: Publish Test Results
#        uses: EnricoMi/publish-unit-test-result-action@v1
#        if: always()
#        with:
#          files: reports/tests/*.xml
#
#      - name: SonarCloud Scan
#        uses: sonarsource/sonarcloud-github-action@v1.6
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker:
    name: Docker Build & Deploy

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: clarkperkins
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/clarkperkins/stpm
          tags: |
            type=ref,event=branch
            type=ref,event=pr
          flavor: |
            latest=${{ github.ref_name == github.event.repository.default_branch }}

      - name: Docker Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  helm:
    name: Helm Build & Deploy

    runs-on: ubuntu-latest

#    needs: docker

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Helm
        uses: azure/setup-helm@v3

      - name: Helm Login
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login -u clarkperkins --password-stdin https://ghcr.io

      - name: Helm Build
        run: |
          helm package charts/stpm

      - name: Helm Push
        run: |
          helm push stpm-0.1.0.tgz oci://ghcr.io/clarkperkins
